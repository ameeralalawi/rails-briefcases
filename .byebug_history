c
n
eval_complex(var_inst, op["value"]["data"],lead)
exit
value
c
value
exit
value
exit
op["value"]["data"]
op["value"]
c
exit
c
op["value"].is_a? String
op["value"].is_a? Hash
op["value"]
op[value]
op
c
op
c
op
c
op["value"].is_a? Hash
op["value"].is_a? String
op["type"]
op
c
value
vlue
op
c
op
c
op
c
op
c
op
c
value
c
prepared_expr
c
value[0]["value"]
value[0]
value[0]["value"]
value[0]["value"]["data"]
value[0]["value"]["data"][0]
value[0]["value"]["data"]
JSON.parse(value[0]["value"]["data"])
JSON.parse(value[0]["value"])["data"]
value[0]["value"]["data"]
value[0]["value"].is_a? Hash
value[0]["value"]
value[0]["type"]
value[0]
value[0]["type"]
value[0]["value"]
value[0]
value[1]
value[2]
value[9]
value[8]
value[7]
value[6]
value[5]
value[4]
value[3]
value[2]
value[1]
value[0]
value
c
value
c
value
c
eval(prepared_expr.join)
prepared_expr
next
value
c
value
exit
c
